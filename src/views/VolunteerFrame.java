package views;

//Importing volunteer controller
import controllers.VolunteerController;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import models.Volunteer;
import models.NonEditableTableModel;


// Import MainFrame
import paws_and_care.MainFrame;


public class VolunteerFrame extends javax.swing.JFrame {

    /**
     * Creates new form VolunteerForm
     */
    public VolunteerFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        titleLable = new javax.swing.JLabel();
        SecondaryPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        ageLabel = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        mobileLabel = new javax.swing.JLabel();
        mobileField = new javax.swing.JTextField();
        mobileLabel1 = new javax.swing.JLabel();
        availabilityDropdown = new javax.swing.JComboBox<>();
        registerButton = new javax.swing.JButton();
        viewPanel = new javax.swing.JPanel();
        viewLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tableScrollPane = new javax.swing.JScrollPane();
        volunteerTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Volunteer Management");
        setBackground(new java.awt.Color(255, 255, 204));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        MainPanel.setBackground(new java.awt.Color(255, 255, 204));

        titleLable.setFont(new java.awt.Font("Cambria", 0, 48)); // NOI18N
        titleLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLable.setText("Volunteer Management");

        SecondaryPanel.setBackground(new java.awt.Color(255, 255, 204));
        SecondaryPanel.setPreferredSize(new java.awt.Dimension(850, 432));

        nameLabel.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        nameLabel.setText("Volunteer Name (USERNAME)");

        nameField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        addressLabel.setText("Volunteer Address");

        addressField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        ageLabel.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        ageLabel.setText("Volunteer Age");

        ageField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mobileLabel.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        mobileLabel.setText("Mobile Number");

        mobileField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mobileLabel1.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        mobileLabel1.setText("Availability");

        availabilityDropdown.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        availabilityDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not-Available" }));

        registerButton.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        registerButton.setText("Regitser Volunteer");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        viewPanel.setBackground(new java.awt.Color(255, 255, 204));
        viewPanel.setPreferredSize(new java.awt.Dimension(476, 433));

        viewLabel.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        viewLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viewLabel.setText("Registered Users");

        volunteerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Availability", "Contact Number", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPane.setViewportView(volunteerTable);
        if (volunteerTable.getColumnModel().getColumnCount() > 0) {
            volunteerTable.getColumnModel().getColumn(0).setResizable(false);
            volunteerTable.getColumnModel().getColumn(0).setPreferredWidth(6);
            volunteerTable.getColumnModel().getColumn(1).setResizable(false);
            volunteerTable.getColumnModel().getColumn(1).setPreferredWidth(3);
            volunteerTable.getColumnModel().getColumn(2).setResizable(false);
            volunteerTable.getColumnModel().getColumn(2).setPreferredWidth(8);
            volunteerTable.getColumnModel().getColumn(3).setResizable(false);
            volunteerTable.getColumnModel().getColumn(3).setPreferredWidth(6);
            volunteerTable.getColumnModel().getColumn(4).setResizable(false);
        }

        refreshButton.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addComponent(viewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewLabel)
                    .addComponent(refreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SecondaryPanelLayout = new javax.swing.GroupLayout(SecondaryPanel);
        SecondaryPanel.setLayout(SecondaryPanelLayout);
        SecondaryPanelLayout.setHorizontalGroup(
            SecondaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SecondaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SecondaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameLabel)
                    .addComponent(nameField)
                    .addComponent(addressLabel)
                    .addComponent(addressField)
                    .addComponent(ageLabel)
                    .addComponent(ageField)
                    .addComponent(mobileLabel)
                    .addComponent(mobileField)
                    .addGroup(SecondaryPanelLayout.createSequentialGroup()
                        .addComponent(mobileLabel1)
                        .addGap(44, 44, 44)
                        .addComponent(availabilityDropdown, 0, 236, Short.MAX_VALUE))
                    .addComponent(registerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(viewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SecondaryPanelLayout.setVerticalGroup(
            SecondaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SecondaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(mobileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(SecondaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileLabel1)
                    .addComponent(availabilityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(registerButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(SecondaryPanelLayout.createSequentialGroup()
                .addComponent(viewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        homeButton.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(homeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(SecondaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE))))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLable))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(homeButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SecondaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // Volunteer registration
        String name = (String) nameField.getText();
        name = name.toLowerCase();
        String address = (String) addressField.getText();
        
        // Age validation
        String ageText = (String) ageField.getText();
        int age = 0;
        try {
            age = Integer.parseInt(ageText);
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter a valid integer for age.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Mobile number validation
        String mobile_number = (String) mobileField.getText();
        if  (mobile_number.length()!=10){
            JOptionPane.showMessageDialog(null, "Please enter a valid Mobile Number", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        
        // Availability
        String availabilityStatus = (String) availabilityDropdown.getSelectedItem();
        boolean availability = availabilityStatus.equals("Available");
        
        // Create a object
        Volunteer volunteer = new Volunteer(name, age, mobile_number, address, availability);
        
        // Initilalizing Controller
        VolunteerController controller = new VolunteerController();
        int rowsAffected = controller.addVolunteer(volunteer);
        
        if (rowsAffected > 0){
            refreshButtonActionPerformed(evt);
            nameField.setText("");
            ageField.setText("");
            addressField.setText("");
            mobileField.setText("");
            JOptionPane.showMessageDialog(null, "Registration successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            JOptionPane.showMessageDialog(null, "Registration Failed!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_registerButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        // Code for retreive data from database when the window is opened
        try {
        // Data should be get from SQL database
        VolunteerController controller = new VolunteerController();
        ResultSet resultSet = controller.getVolunteerData();
        
        NonEditableTableModel tableModel = new NonEditableTableModel(new Object[0][5], new String[]{"Name", "Age", "Availability", "Contact Number", "Address"});
        
        while (resultSet.next()) {
            String name = resultSet.getString("name");
            int age = Integer.parseInt(resultSet.getString("age"));
            String availabilityStatus = resultSet.getString("availability");
            String availability = Integer.parseInt(availabilityStatus)==1 ? "Avialable": "Not-Available";
            String mobile = resultSet.getString("mobile_number");
            String address = resultSet.getString("address");

            tableModel.addRow(new Object[]{name, age, availability, mobile, address});
        }
        
        volunteerTable.setModel(tableModel);
        if (volunteerTable.getColumnModel().getColumnCount() > 0) {
            volunteerTable.getColumnModel().getColumn(0).setResizable(false);
            volunteerTable.getColumnModel().getColumn(0).setPreferredWidth(6);
            volunteerTable.getColumnModel().getColumn(1).setResizable(false);
            volunteerTable.getColumnModel().getColumn(1).setPreferredWidth(3);
            volunteerTable.getColumnModel().getColumn(2).setResizable(false);
            volunteerTable.getColumnModel().getColumn(2).setPreferredWidth(8);
            volunteerTable.getColumnModel().getColumn(3).setResizable(false);
            volunteerTable.getColumnModel().getColumn(3).setPreferredWidth(6);
            volunteerTable.getColumnModel().getColumn(4).setResizable(false);
        }
        
        }
        catch (SQLException e){
            System.out.println("Error occurred retreving volunteer data");
        }
    }//GEN-LAST:event_formWindowOpened

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // Refresh table data
        try {
        // Data should be get from SQL database
        VolunteerController controller = new VolunteerController();
        ResultSet resultSet = controller.getVolunteerData();
        
        NonEditableTableModel tableModel = new NonEditableTableModel(new Object[0][5], new String[]{"Name", "Age", "Availability", "Contact Number", "Address"});
        
        while (resultSet.next()) {
            String name = resultSet.getString("name");
            int age = Integer.parseInt(resultSet.getString("age"));
            String availabilityStatus = resultSet.getString("availability");
            String availability = Integer.parseInt(availabilityStatus)==1 ? "Avialable": "Not-Available";
            String mobile = resultSet.getString("mobile_number");
            String address = resultSet.getString("address");

            tableModel.addRow(new Object[]{name, age, availability, mobile, address});
        }
        
        volunteerTable.setModel(tableModel);
        if (volunteerTable.getColumnModel().getColumnCount() > 0) {
            volunteerTable.getColumnModel().getColumn(0).setResizable(false);
            volunteerTable.getColumnModel().getColumn(0).setPreferredWidth(6);
            volunteerTable.getColumnModel().getColumn(1).setResizable(false);
            volunteerTable.getColumnModel().getColumn(1).setPreferredWidth(3);
            volunteerTable.getColumnModel().getColumn(2).setResizable(false);
            volunteerTable.getColumnModel().getColumn(2).setPreferredWidth(8);
            volunteerTable.getColumnModel().getColumn(3).setResizable(false);
            volunteerTable.getColumnModel().getColumn(3).setPreferredWidth(6);
            volunteerTable.getColumnModel().getColumn(4).setResizable(false);
        }
        
        }
        catch (SQLException e){
            System.out.println("Error occurred retreving volunteer data");
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // Goto Main Frame
        MainFrame newMainFrame = new MainFrame();
        newMainFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VolunteerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VolunteerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VolunteerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VolunteerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VolunteerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel SecondaryPanel;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JComboBox<String> availabilityDropdown;
    private javax.swing.JButton homeButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField mobileField;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JLabel mobileLabel1;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton registerButton;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel titleLable;
    private javax.swing.JLabel viewLabel;
    private javax.swing.JPanel viewPanel;
    private javax.swing.JTable volunteerTable;
    // End of variables declaration//GEN-END:variables
}
